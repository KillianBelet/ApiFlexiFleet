a:8:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:324:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\EventSubscriber\User\UserEncodePasswordEvent" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:78:"C:\xampp\htdocs\tpFlexiFleet\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:86:"C:\xampp\htdocs\tpFlexiFleet\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:61:"Please install the "intl" PHP extension for best performance.";s:4:"file";s:103:"C:\xampp\htdocs\tpFlexiFleet\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:336;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:109:"C:\xampp\htdocs\tpFlexiFleet\vendor\symfony\dependency-injection\Compiler\MergeExtensionConfigurationPass.php";s:4:"line";i:76;s:8:"function";s:4:"load";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:120:"Since api-platform/core 2.7: The use of `allow_plain_identifiers` has been deprecated in 2.7 and will be removed in 3.0.";s:4:"file";s:75:"C:\xampp\htdocs\tpFlexiFleet\vendor\symfony\config\Definition\ArrayNode.php";s:4:"line";i:241;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:74:"C:\xampp\htdocs\tpFlexiFleet\vendor\symfony\config\Definition\BaseNode.php";s:4:"line";i:391;s:8:"function";s:13:"finalizeValue";s:5:"class";s:45:"Symfony\Component\Config\Definition\ArrayNode";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:303:"Method "Symfony\Bundle\MakerBundle\Maker\AbstractMaker::interact()" might add "void" as a native return type declaration in the future. Do the same in child class "ApiPlatform\Core\Bridge\Symfony\Maker\MakeDataProvider" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:78:"C:\xampp\htdocs\tpFlexiFleet\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:125:"C:\xampp\htdocs\tpFlexiFleet\vendor\symfony\maker-bundle\src\DependencyInjection\CompilerPass\MakeCommandRegistrationPass.php";s:4:"line";i:37;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:16384;s:7:"message";s:304:"Method "Symfony\Bundle\MakerBundle\Maker\AbstractMaker::interact()" might add "void" as a native return type declaration in the future. Do the same in child class "ApiPlatform\Core\Bridge\Symfony\Maker\MakeDataPersister" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:78:"C:\xampp\htdocs\tpFlexiFleet\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:331;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:125:"C:\xampp\htdocs\tpFlexiFleet\vendor\symfony\maker-bundle\src\DependencyInjection\CompilerPass\MakeCommandRegistrationPass.php";s:4:"line";i:37;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:16384;s:7:"message";s:149:"Since api-platform/core 2.7: The service "ApiPlatform\Core\Api\IdentifiersExtractor" is deprecated, use ApiPlatform\Api\IdentifiersExtractor instead.";s:4:"file";s:78:"C:\xampp\htdocs\tpFlexiFleet\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:91:"C:\xampp\htdocs\tpFlexiFleet\vendor\api-platform\core\src\Core\Api\IdentifiersExtractor.php";s:4:"line";i:49;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:205:"Since api-platform/core 2.7: Use "ApiPlatform\Metadata\Resource\Factory\ResourceMetadataCollectionFactoryInterface" instead of "ApiPlatform\Core\Metadata\Resource\Factory\ResourceMetadataFactoryInterface".";s:4:"file";s:78:"C:\xampp\htdocs\tpFlexiFleet\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:87:"C:\xampp\htdocs\tpFlexiFleet\vendor\api-platform\core\src\Symfony\Routing\ApiLoader.php";s:4:"line";i:74;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:16384;s:7:"message";s:225:"Since api-platform/core 2.7: Decorating the legacy ApiPlatform\Core\Metadata\Property\Factory\PropertyMetadataFactoryInterface is deprecated, use ApiPlatform\Metadata\Property\Factory\PropertyMetadataFactoryInterface instead.";s:4:"file";s:78:"C:\xampp\htdocs\tpFlexiFleet\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:126:"C:\xampp\htdocs\tpFlexiFleet\vendor\api-platform\core\src\Core\Metadata\Property\Factory\AnnotationPropertyMetadataFactory.php";s:4:"line";i:44;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:26;}}